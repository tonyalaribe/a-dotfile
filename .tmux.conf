set -sg escape-time 10
set -g history-limit 5000
set -g status-keys vi
set -g mouse
set-window-option -g mode-keys vi
# pressing Ctrl+B and then [ will enter copy mode, allowing you to copy text or view the history of the buffer, 
# including searching with / and ?. Most of the basic vi movements work, 
# including screenwise vertical movement commands like Ctrl+F and Ctrl+B. 
# You can leave this mode just by pressing Enter, or you can start a selection by pressing Space on a character, moving to another, and then pressing Enter. 
# If you have text copied like this you can paste it into any tmux window in that session by pressing Ctrl+B and then ].

# allow using v to start a selection and y to complete
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

set-option -g history-limit 50000

# start base numbering at 1
set -g base-index 1
# renumber windows if they are created or destroyed
set -g renumber-windows on

bind -r ^ last-window
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

set -g prefix C-a

# allow switching between sessions 
bind-key C-j choose-tree
# bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# break out the current pane into its own session with dir name as session name. eg when checking out new repos
bind-key C-b send-keys 'tat && exit' 'C-m'

bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
#
#
set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
set -ga terminal-overrides ",xterm-256color*:Tc"



# allow reloading tmux
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"



# <ctrl-h> => Left
# <ctrl-j> => Down
# <ctrl-k> => Up
# <ctrl-l> => Right
# <ctrl-\> => Previous split
set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

# highlight any text and press o to open it via 'open'  in osx
# ctrl-o to open it with $EDITOR
# Shift-s to search for hightlighted text.
set -g @plugin 'tmux-plugins/tmux-open'


# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + S (shift + s) - switches to the last session.
# prefix + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.
# prefix + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it
# secondary-keys
# h, -, ": join horizontally
# v, |, %: join vertically
# f, @: join full screen
set -g @plugin 'tmux-plugins/tmux-sessionist'


# add tmux-sessionizer to the path
bind-key -r A run-shell "tmux-sessionizer ~/Projects/apitoolkit-server"
bind-key -r C run-shell "tmux-sessionizer ~/Projects/complero-service"



# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

